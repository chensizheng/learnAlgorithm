原理：为一个对象提供一个替身，以控制对这个对象的访问
被代理的对象可以使远程对象、创建开销大的对象或需要安全控制的对象。

远程糖果机监控系统：
    地点、糖果机库存、当前状态
本地糖果机怎么做？1、写一个monitor,2、在Monitor里放糖果机对象，3、糖果机返回地点、库存、状态

远程监控：
    可以使用web编程、socket编程等方式实现。开发成本高
在本地监控的基础上实现：

    远程对象的本地代表，通过它可以让远程对象当本地对象来调用。
    远程代理通过网络和真正的远程对象沟通信息。
    利用Java RMI 实现远程代理



Java RMI
    是计算机之间通过网络实现对象调用的一种通讯机制。
    使用这种机制，一台计算机上的对象可以调用另外一台计算机上的对象来获取远程数据

    在过去TCP/IP通讯是远程通讯的主要手段，面向过程的开发
    而RPC使程序员更容易调用远程程序，单在面对复杂的信息传讯时，RPC依然未能很好的支持

    RMI被设计成一钟面向对象开发方式，允许程序员使用远程对象来实现通讯。


1、制作远程接口文件：
给本地用，接口返回的参数是可序列化的。
2、服务端接口实现：Service文件
3、RMI服务端注册，开启服务
4、RMI代理端（本地）通过RMI查询到服务端，建立联系，通过接口调用远程方法

常见的代理模式：
    虚拟代理:
        为创建开销大的对象提供代理服务，真正的对象在创建前和传建忠，是由虚拟代理来扮演替身
        如：Android的在线图片加载
    动态代理：
        运行时鼎泰的创建代理类对象，并将方法调用转发到指定类
        Proxy InvocationHandler
    保护代理：
        看一个找对象的项目，个人信息、兴趣爱好、打分。

    变体：防火墙代理、缓存代理、智能引用代理
