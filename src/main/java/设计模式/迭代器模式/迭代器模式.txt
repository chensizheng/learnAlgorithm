两个菜馆合并后的菜单问题
    一个用ArrayList管理菜单
    一个用数组管理菜单

传统模式打印菜单：
    拿到两个菜单结构，两个for循环分别打印List和Array

扩展性：
    如果再来一个餐厅，就需要添加一个菜单结构，一个for循环

迭代器模式的原理和设计：
    思考：针对接口的开发，不用暴露数据结构.
    封装遍历，迭代器接口：
        interface Iterator{
            hasNext();
            next();
        }
    需要组合菜单的地方，只需要获取菜单的迭代器即可

迭代器模式：提供一种方法顺序访问一个聚合对象的各种对象。

Java中的内置迭代器：
    interface Iterator{
        hasNext();
        next();
        remove();
    }
    Java中的ArrayList有内置迭代器
    数组是没有内置迭代器的

单一责任原则：
    一个类应该只有一个引起变化的原因

迭代器模式的关键点：





