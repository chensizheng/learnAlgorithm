适配器模式：将一个类的接口转换成另一种接口，让原本不接口不兼容的类可以兼容


从用户角度看不到被适配者，解耦


对象适配器：
    目标 <- 适配器 <- 被适配者
    传入被适配者对象  火鸡模拟鸭子



类适配器：通过多重继承目标接口和被适配者类方式来实现适配

    目标     ↖️
               适配器
    被适配者  ↙️

    多重继承，其中继承的目标接口部分达到适配目的，二继承被适配者类的部分达到通过调用适配者类里的方法来实现目标接口的功能




对象适配器和类适配器的差异：
    对象适配器和类适配器使用了不同的方法实现适配，对象适配器使用组合，类适配器使用继承。



多用组合，少用继承。继承不够灵活


从枚举器到迭代器的适配：

适配器关键点：
装饰者模式和适配器模式的差别：
    装饰着模式：被装饰者和装饰者都有相同的超类，他们属于一个类族；
    适配器模式：目标接口的子类；
    如果要适配器级联起来，那么适配器每一层都是不同的类族；

    设计原理:
        适配器模式是从A接口转换B接口，是对被适配者对象的组合和转化
        装饰着模式是在原有接口的功能上添加功能。



